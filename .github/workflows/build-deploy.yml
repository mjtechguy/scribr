name: CI Build, Test, and Deploy

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
    pull_request:
    push:

jobs:
    stag-deploy:
        name: Deployment to staging
        runs-on: ubuntu-latest
        environment: Staging
        if: github.ref == 'refs/heads/staging'
        steps:
            - uses: actions/checkout@v2
            - name: Install Vercel CLI
              run: npm install --global vercel@latest
            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
            - name: Build Project Artifacts
              run: vercel build --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
            - name: Deploy Project Artifacts to Vercel
              run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_ACCESS_TOKEN }}

    prod-deploy:
        name: Deployment to production
        runs-on: ubuntu-latest
        environment: Production
        if: github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@v2
            - name: Install Vercel CLI
              run: npm install --global vercel@latest
            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
            - name: Build Project Artifacts
              run: vercel build --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
            - name: Deploy Project Artifacts to Vercel
              run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
